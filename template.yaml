AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tojimari

  Sample SAM Template for tojimari

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 512

Resources:
  TojimariFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: tojimari/
      Handler: app.lambda_handler
      Runtime: ruby3.3
      Architectures:
        - x86_64
      Events:
        Tojimari:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /tojimari
            Method: get
  TojimariTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: tojimari
      AttributeDefinitions:
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: 'name'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST
  TojimariIoTDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: IoTDynamoDBRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TojimariIoTDynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !GetAtt TojimariTable.Arn
  TojimariTopicRile:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: 'TojimariTopicRule'
      TopicRulePayload:
        Sql: SELECT name, status FROM 'tojimari'
        Actions:
          - DynamoDBv2:
              RoleArn: !GetAtt TojimariIoTDynamoDBRole.Arn
              PutItem:
                TableName: !Ref TojimariTable

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  TojimariApi:
    Description: "API Gateway endpoint URL for Prod stage for Tojimari function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  TojimariFunction:
    Description: "Tojimari Lambda Function ARN"
    Value: !GetAtt TojimariFunction.Arn
  TojimariFunctionIamRole:
    Description: "Implicit IAM Role created for Tojimari function"
    Value: !GetAtt TojimariFunctionRole.Arn
